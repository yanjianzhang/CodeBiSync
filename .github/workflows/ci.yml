name: CodeBiSync CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        flutter-version: ['3.10.0']
        include:
          - os: ubuntu-latest
            identifier: linux
          - os: macos-latest
            identifier: macos
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: 'stable'
          architecture: arm64
        
      - name: Enable Linux desktop support (Linux only)
        if: matrix.identifier == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
          flutter config --enable-linux-desktop
        
      - name: Enable macOS desktop support (macOS only)
        if: matrix.identifier == 'macos'
        run: |
          flutter config --enable-macos-desktop
          # M1芯片特殊处理
          arch -arm64 flutter precache --macos
        
      - name: Enable Windows desktop support (Windows only)
        if: matrix.identifier == 'windows'
        run: flutter config --enable-windows-desktop
        
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run flutter doctor
        run: flutter doctor -v
        
      - name: Run unit tests
        run: flutter test --coverage
        
      - name: Upload coverage report
        if: matrix.identifier == 'macos' # 在macOS上上传覆盖率报告
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
        
      - name: Verify code formatting
        run: flutter format --set-exit-if-changed .
        
      - name: Analyze code
        run: flutter analyze --no-pub
        
      - name: Build debug app
        run: flutter build ${matrix.identifier} --debug
        
  # 可选：添加发布构建作业
  # release-build:
  #   runs-on: ${{ matrix.os }}
  #   # 配置与test作业类似，但使用--release标志